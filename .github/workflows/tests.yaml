name: PyTests

on: [ push ]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      MATRIX: ${{ env.MATRIX }}
      HAS_CHANGES: ${{ env.HAS_CHANGES }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - id: set-matrix
        name: Get changed files and set matrix
        run: |
          changed_vendors=$(python3 .github/workflows/scripts/get_modified_blueprints.py ${{ github.event.before }} ${{ github.event.after }} | tr '\n' ',' | sed 's/,$//')
          echo "Changed vendors: $changed_vendors"
          if [[ -z "$changed_vendors" ]]; then
            echo "No vendor package changes detected."
            echo "MATRIX=[]" >> $GITHUB_ENV
            echo "HAS_CHANGES=false" >> $GITHUB_ENV
          else
            echo "MATRIX=[\"${changed_vendors//,/\",\"}\"]" >> $GITHUB_ENV
            echo "HAS_CHANGES=true" >> $GITHUB_ENV
          fi

  test:
    if: needs.detect_changes.outputs.HAS_CHANGES == 'true'
    name: Run tests
    needs: detect_changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        vendor: ${{fromJson(needs.detect_changes.outputs.MATRIX)}}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python3 -

      - name: Run tests
        run: |
          cd shipyard_blueprints/${{ matrix.vendor }}
          poetry add pytest
          poetry install
          poetry run pytest